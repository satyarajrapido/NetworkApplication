#Run this workflow every 1 minute
name: Rollout Percentage

on:
  push:
    schedule:
    - cron: '*/5 * * * *'

env:
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"

jobs:
  rollout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.25.0
        with:
          name: my-artifact-name
          search_artifacts: true
          path: beta_percentage.txt

      - name: Print env variables
        run: |
            ls beta_percentage.txt/beta_percentage.txt/beta_percentage.txt/beta_percentage.txt
            echo "BETA_ROLL_OUT_PERCENTAGE=$(cat beta_percentage.txt/beta_percentage.txt/beta_percentage.txt/beta_percentage.txt)" >> $GITHUB_ENV
            echo "BETA_ROLL_OUT_PERCENTAGE=${{ env.BETA_ROLL_OUT_PERCENTAGE }}"

      - name: Add env variables
        run: |
          if [ -z "${{ env.BETA_ROLL_OUT_PERCENTAGE }}" ]; then
            echo "BETA_ROLL_OUT_PERCENTAGE=0" >> $GITHUB_ENV
          fi
          
          if [ -z "${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }}" ]; then
            echo "PRODUCTION_ROLL_OUT_PERCENTAGE=0" >> $GITHUB_ENV
          fi
          

#      - name: Check if rollout is running
#        if: ${{ github.event.inputs.halt == 'false' }}
#        run: |
#          echo "ROLL_OUT_STATUS=running" >> $GITHUB_ENV
#
#      - name: Check if rollout is halted
#        if: ${{ github.event.inputs.halt == 'true' }}
#        run: |
#          echo "Rollout has been halted"
#          echo "ROLL_OUT_STATUS=halted" >> $GITHUB_ENV
#          exit 1

      - name: Update Rollout Percentage
        id: update_rollout_percentage
        run: |
          if [ ${{ env.BETA_ROLL_OUT_PERCENTAGE }} -lt 50 ]; then
            echo "Updating beta to 50%"  
            echo 50 > beta_percentage.txt
          elif [ ${{ env.BETA_ROLL_OUT_PERCENTAGE }} -lt 100 ]; then
            echo "Updating beta to 100%"  
            echo 100 > beta_percentage.txt
          elif [ ${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }} -lt 5 ]; then
            echo "Updating production to 5%"  
            echo 5 > production_percentage.txt
          elif [ ${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }} -lt 10 ]; then
            echo "Updating production to 10%"  
            echo 10 > production_percentage.txt
          elif [ ${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }} -lt 25 ]; then
            echo "Updating production to 25%"
            echo 25 > production_percentage.txt
          elif [ ${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }} -lt 75 ]; then
            echo "Updating production by 25%"
            NEW_PERCENTAGE=$((env.PRODUCTION_ROLL_OUT_PERCENTAGE + 25))
            echo "$NEW_PERCENTAGE" > production_percentage.txt
          elif [ ${{ env.PRODUCTION_ROLL_OUT_PERCENTAGE }} -lt 100 ]; then
            echo "Updating production to 100%"
            echo 100 > production_percentage.txt
          fi
        continue-on-error: true

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact-name
          path: beta_percentage.txt

#      - name: Stop Workflow
#        if: ${{ contains(steps.UpdateRolloutPercentage.outputs.result, '100') }}
#        run: |
#          echo "Rollout percentage for production release is now 100%. Stopping workflow."
#          exit 0
#        continue-on-error: true

#      - name: Update app rollout to slack group
#        uses: rtCamp/action-slack-notify@v2
#        env:
#            SLACK_MESSAGE: Rollout percentage updated to ${{ steps.update_rollout_percentage.outputs.result }}.
#            SLACK_TITLE: Captain App Rollout Updates
#            SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK_URL }}
#            MSG_MINIMAL: true
